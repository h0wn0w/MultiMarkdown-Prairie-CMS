{"name":"MultiMarkdown-CMS-Responsive","tagline":"The MultiMarkdown Content Management System, updated for responsive web design using the Goldilocks Approach","body":"# Preface #\r\n\r\nBefore getting on with the goods, here is what's different about this version of the MMD-CMS: \r\n\r\nThe CMS is now based on responsive web design principles. The base stylesheets were pulled from and informed by [The Goldilocks Approach](goldilocksapproach.com), created by *Design by Front*. This approach is fairly different from most other responsive frameworks (e.g., [Twitter-Bootstrap](http://twitter.github.io/bootstrap/index.html), [Foundation](http://foundation.zurb.com/)) in that it uses `ems` to scale pages, rather than a grid-based system that uses pixel widths. There are many, many good responsive frameworks and CMSs out there. The Goldilocks Approach was chosen because, on the surface, it required the fewest out-of-the-box assumptions and allowed for a high degree of user configurability. Thus, it seemed most in keeping with the MMD-CMS approach of simplicity by using a bottom-up build strategy. \r\n\r\nThe boilerplate stylesheets were modified to retain, as best as possible, the layout of the original MultiMarkdown CMS. The original `layout.css` used modified portions of Matthew James Taylor's [multi-column liquid layout](http://matthewjamestaylor.com/blog/ultimate-multi-column-liquid-layouts-em-and-pixel-widths) to yield a page-centered main text container and either a right or left column wrapper. The same thing can be accomplished with the responsive framework, in more or less in the same manner. The sidebar floats right by default on a desktop or larger tablet, and can be made to float left by appending the `.left` class to the `aside` element.\r\n\r\nThere's also now code for a sticky footer, courtesy of [Martin Bean](http://martinbean.co.uk) and [Ryan Fait](http://ryanfait.com/sticky-footer/). As its name implies, the footer will \"stick\" to the bottom of the web page regardless of content length. This is enabled on the default page, but is easily removed. \r\n\r\nThis is just the \"advanced\" branch, as opposed to the \"master\" *and* \"advanced\" branches of the original, which allows for internal page linking. So, you have the option of generating footnotes or glossary terms as needed. This takes a bit more tweaking, as noted below, but if you're going to use MultiMarkdown, then use MultiMarkdown, right? \r\n\r\n# Introduction #\r\n***NOTE**: MultiMarkdown CMS is now updated to work with MMD 3.0. If you need\r\na version that is compatible with MMD 2.0, you can choose an older version\r\nfrom the [downloads] page. MMD 3.0 must be installed separately.*\r\n\r\n*Also, please note that MMD-CMS has been modified to output HTML that should be compatible with HTML5, in ancticipation of these changes being made in MMD as well.*\r\n\r\n[downloads]: https://github.com/fletcher/MultiMarkdown-CMS/downloads\r\n\r\nMultiMarkdown CMS  is basically a collection  of utilities that allows  you to\r\nrun a web site without any other  software. I have tried a variety of packages\r\nwhen hosting my own web site. In the end, however, I was basically using those\r\nprograms  to put  a wrapper  around my  content, which  was always  managed by\r\nMultiMarkdown.  Additionally,  none  of  those programs  really  fit  into  my\r\nworkflow, and the performance was often not what I would like.\r\n\r\nSo, instead, I decided  to run my web site with a  minimal amount of software.\r\nIn fact,  it could be run  with MultiMarkdown alone,  but I would miss  out on\r\nsome of the interactive features.\r\n\r\nThe basic premise is:\r\n\r\n* Create a plain text file (in MMD syntax) for each page of the site\r\n\r\n* use `mmd2web.pl`  to convert  to HTML,  including some  markup to  format \r\n  the pages for the web site\r\n\r\n* upload the HTML file (and optionally the txt file) to your web server, and\r\n  you're off\r\n\r\nThe newly  formatted HTML file  includes SSI code  that causes Apache  to add\r\ncertain templates to  the page. This allows you to  standardize the appearance\r\nof each page (e.g. headers, footers, sidebar, etc).\r\n\r\nAdditionally, CGI scripts  are included to manage archives,  Atom feeds, tags,\r\nsearching, OpenID authentication, comments, and more.\r\n\r\nWhen  building the  system, I  started off  with a  collection of  essentially\r\nstatic web  pages. I  then added cgi  scripts only where  I thought  they were\r\nabsolutely necessary  to give my site  the interactive features I  desired. If\r\nyou're someone who likes lots of widgets and gadgets on their site --- I won't\r\nbe programming  them. However,  because of the  simple philosophy  behind this\r\napproach, the pages should be compatible  with just about anything you want to\r\nadd that doesn't require a backend database.\r\n\r\nHowever,  keep in  mind that  my  goal is  simplicity.  I don't  want lots  of\r\nplugins, extensions, modules, etc. I don't  want lots of different themes that\r\nI can choose from. If you want these things, then another package might be for\r\nyou. But if  you want a simple method  of creating a web site  that focuses on\r\ncontent, this may be for you.\r\n\r\nThis package  certainly requires more  tinkering than a prebuilt  solution. If\r\nyou're not  familiar with .htaccess  files, configuring apache,  changing file\r\npermissions, and examining error logs then you might run into some roadblocks.\r\nHowever, that could also be considered an opportunity to track down solutions!\r\n\r\n\r\n# Where do I get it? #\r\n\r\n\r\nYou can download the package:\r\n\r\n<http://github.com/fletcher/MultiMarkdown-CMS>\r\n\r\nYou can also use git to clone the source:\r\n\r\n\tgit clone git://github.com/fletcher/MultiMarkdown-CMS.git\r\n\r\nIf you know  how to use git,  I recommend that approach for  reasons that will\r\nbecome clear later.\r\n\r\n\r\n# How do I install it? #\r\n\r\nOnce you download and unpack the  software, place the directory where your web\r\nserver software expects it, and rename it as desired.\r\n\r\n*Please note: if you have trouble installing  the software, do a web search to\r\nfigure out what to do. I'm happy to help troubleshoot my software, but I don't\r\nwant to get into trying to troubleshoot everyone's web server setup....*\r\n\r\n\r\nFor example, I place mine in `/Users/fletcher/Sites/mmd-static`.\r\n\r\n\r\nYou should now be able to go to something like:\r\n\r\n\thttp://127.0.0.1/~fletcher/mmd_static/index.html\r\n\r\nAnd see *something* --- it will likely give you some error messages, however.\r\n\r\n\r\n# How to configure Apache #\r\n\r\nMultiMarkdown CMS is fairly easy to install with Apache. You are only required\r\nto modify your Apache configuration files so that:\r\n\r\n\tAllowOverride none\r\n\r\nbecomes\r\n\r\n\tAllowOverride All\r\n\r\nOn a mac, for example, you would modify `/etc/apache2/users/username.conf`.\r\n\r\n\r\nThere are two versions of the software --- the regular, and the advanced.\r\n\r\nThe regular version  of the software is  designed to be easier  to install. It\r\ncan go in  any folder/URL in your web  host (i.e. it does *not* have  to be at\r\nthe root). You  do have to configure  the .htaccess file so  that the software\r\nknows where it  is located so that  links are coded properly.  When using this\r\nversion, when you want  to link to your home page, for  example you would link\r\nto \"index.html\", **NOT** \"/index.html\".\r\n\r\nThis flexibility comes at a cost --- links *within* a page, e.g. \"#footnote1\",\r\nwill not work with the regular version of MMD CMS. This is a limitation of the\r\n`<base href>` feature.\r\n\r\nIf you want to allow internal links, then you need to use the advanced version\r\nof MMD  CMS. This version *does*  need to be installed  so that it lives  at a\r\ntop-level URL.  This can be accomplished  by putting it at  the webserver root\r\nfolder (wherever  that is for your  particular server), or by  using a virtual\r\nhost. I  can't support everyone  in figuring  out how to  do that, but  I have\r\nincluded what I did to get it working on my particular machine.\r\n\r\nFor Apache  2 on a Mac,  do the following (all  others will need to  seek help\r\nelsewhere):\r\n\r\n* as an admin, go to `/etc/apache2/extra`\r\n* `sudo pico httpd-vhosts.conf` (or similar)\r\n* comment out the existing virtualhost sections (add a \"#\" at the beginning of \r\n  the line)\r\n* then, add something like the following at the end of the file:\r\n\r\n\t\t<VirtualHost *:80>\r\n\t\t    DocumentRoot \"/Users/fletcher/Sites/mmd_static\"\r\n\t\t    ServerName mmd.local\r\n\t\t</VirtualHost>\r\n\r\n* then add the following to `/etc/hosts`:\r\n\r\n\t\t127.0.0.1       mmd.local\r\n\r\n* finally, `sudo pico /etc/apache2/httpd.conf` and uncomment the following\r\n  line:\r\n\r\n\t\tInclude /private/etc/apache2/extra/httpd-vhosts.conf\r\n\r\nIf you  restart Web Sharing in  the control panel,  you should now be  able to\r\naccess your  site by pointing  your browser to `http://mmd.local/`.  It should\r\nlook much better than  the first time, but the default CSS  is ugly. There are\r\ntwo sample articles, and one sample tag, to get you started.\r\n\r\nYou can then modify the `.htaccess` file just like the regular version.\r\n\r\n\r\n\r\n# How do I add content to my site? #\r\n\r\nYou can add  content anywhere within the MultiMarkdown CMS  directory. You can\r\ncreate folders,  and bury your  content away. Keep  in mind that  the archives\r\nfeature only locates  pages in a `/YYYY/MM/` folder, e.g.  the sample posts in\r\n`/2010/01/`. Other  folders are  not treated  as \"blog posts\".  My site  is an\r\nexample of this structure.\r\n\r\nTo process  the files into  HTML, you need to  have a working  installation of\r\n[MultiMarkdown](http://fletcherpenney.net/multimarkdown/).\r\n\r\nOnce you add  the text files, you  need to run `mmd2web.pl` to  create an html\r\nfile.  This uses  the  `xhtml-static-site.xslt` file  to  add the  appropriate\r\ntemplates to your  documents. You will also need to  change the permissions on\r\nyour  `.html` files  so  that the  execute  bit is  enabled  (required by  the\r\n[XBitHack](http://httpd.apache.org/docs/1.3/mod/mod_include.html#xbithack)\r\nfeature in order to enable SSI without screwing everything else up).\r\n\r\nNow you just need to customize your templates and CSS files to make everything\r\nlook pretty....\r\n\r\n\r\n# Features #\r\n\r\n\r\nIncluded with  MultiMarkdown-CMS are several  cgi scripts that  add additional\r\nfeatures:\r\n\r\n* pages in the `/YYYY/MM/` hierarchy are treated as \"blog posts\"- organized by\r\n  date\r\n\r\n* an archive  of blog posts is  available at `/archives/`, you can  also go to\r\n  any year or year/month and see a list of posts in that month\r\n\r\n* visitors can  leave comments on any  blog post (by default  comments are not\r\n  accepted on other pages)\r\n\r\n* visitors are authenticated via OpenID for leaving comments\r\n\r\n* two Atom feeds are generated automatically - one for blog posts, and one for\r\n  comments\r\n\r\n* `/sitemap.xml` generates a Google compatible  sitemap of the content of your\r\n  site\r\n\r\n* by default, the home page lists the last 15 blog posts\r\n\r\n* by default, `index.html` pages include a list of the other pages within that\r\n  folder\r\n\r\n* a built-in search function is available (though setting up a \r\n  [Custom Search Engine](http://www.google.com/cse/) isn't a bad idea either)\r\n\r\n* a list of similar pages can be added to each page in the site\r\n\r\n* several  tag related  features are  available automatically  --- `/tags/foo`\r\n  searches for posts tagged `foo` and `/tagmap/` shows a list  of current tags\r\n  with links to those pages\r\n\r\n* default CSS allows you to switch from a right-sided sidebar, to a left-sided\r\n  sidebar with a  simple keyword  switch in `header.html`  --- `rightmenu`  vs\r\n  `leftmenu` (thanks to [Matthew James Taylor][MJT])\r\n\r\n* valid HTML 5 & valid CSS, with the exception of unsupported `<meta>` elements if you have metadata\r\n\r\nThese features are  all demonstrated by the default configuration  - feel free\r\nto modify the scripts as needed for your own requirements.\r\n\r\n[MJT]: http://matthewjamestaylor.com/blog/ultimate-multi-column-liquid-layouts-em-and-pixel-widths\r\n\r\n\r\n# Metadata #\r\n\r\nThe primary metadata used to for this software consists of three tags:\r\n\r\n* Title --- Self-explanatory\r\n* Date --- either `01/31/2010 15:59:56`, or `01/31/2010`\r\n* Tags --- comma separated list of tags (case sensitive)\r\n\r\n# Settings #\r\n\r\nThere are a  couple of configuration changes that should  be done before going\r\nlive with this software:\r\n\r\n* the root `.htaccess` file should be changed to reflect your desired time\r\n  zone\r\n\r\n* four files in `/cgi/` contain the phrase \"enter your password here\" --- this\r\n  should be changed to a private passphrase for better security when handling\r\n  OpenID authentication\r\n\r\n\r\nObviously,  I recommend  improving the  CSS design,  and tweaking  the various\r\ntemplates to construct the look of your site.\r\n\r\n\r\n# Advanced use of git #\r\n\r\nOne of the things I really wanted to be able to do was to manage my site on my\r\nlaptop, experiment with it to be sure it works after any changes are made, and\r\nonly then to upload my changes to the  live server. I have tried to design the\r\ncgi scripts so that they configure themselves as much as possible, so that the\r\nsame code can be run locally, or from a production server.\r\n\r\nMy workflow is  that I make changes  in `/Users/fletcher/Sites/mmd_static/` as\r\ndescribed  above.  That   directory  was  created  as  a  git   clone  of  the\r\nMultiMarkdown-CMS software(as above).\r\n\r\nI then add a remote repository to the git repo:\r\n\r\n\tgit remote add live ssh://user@my.live.host/path/to/public\r\n\r\nwhere the username and  host are what I would normally use to  ssh into my web\r\nprovider. `/path/to/public`  is the path  to the  directory that holds  my web\r\nsite.\r\n\r\nThis allows me  to use git to  upload a copy of  my local site to  my web host\r\nwhen I am satisfied with the changes.  Additionally, by storing my web site in\r\na git repository, I can undo changes when  I make a mistake, and I can also go\r\nback to any previous version of my site.\r\n\r\nOne trick, though, is that you have to configure the remote repository to\r\nupdate the remote copies of all files after every `git push`. To do this, ssh\r\ninto your account, and go to the public directory. (You may want to back\r\neverything up at this point....) Then do the following to create the remote\r\ngit repository:\r\n\r\n\tgit init\r\n\tcd .git/hooks\r\n\tpico post-update\r\n\r\nand then put the following in the file:\r\n\r\n\t#!/bin/sh\r\n\t#\r\n\tcd /path/to/public\r\n\t/usr/bin/env -i /usr/local/bin/git reset --hard\r\n\tchmod g+s cgi/accept_comment.cgi\r\n\r\nWhat this does is force git on the remote server to reset the remote directory\r\nto match the state of the repository  itself. Then I change the permissions on\r\naccept_comment.cgi so that it is permission to write to the comments files.\r\n\r\nYou can, of course, add your own commands to this file as well.\r\n\r\nIf you use the same approach, whenever you want to upload your changes, simply\r\ntype:\r\n\r\n\tgit push live master\r\n\r\nYour changes  will be uploaded,  then the remote  repository will be  reset so\r\nit's up to date, and the permissions will be fixed on accept_comment.cgi.\r\n\r\nRemember, since you have a read-only  connection to my github repository, your\r\nchanges and  private files  cannot be  uploaded. You can  still use  `git pull\r\norigin master`  to update to the  latest version of software  I have released.\r\nThis should not overwrite any changes you  have made, since git is pretty good\r\nat  avoiding  \"collisions\". I've  only  been  using this  \"triple  repository\"\r\napproach for a little while, but so far it's been convenient in allowing me to\r\nkeep private and public files separate.\r\n\r\n**NOTE**: This set-up works  for me. I don't promise it will  work for you, or\r\nthat it won't mess something up. I am  not a git expert. I simply patched this\r\ntogether with a lot  of help from Google. I can't really  offer any support if\r\nit's not working for you.\r\n\r\n\r\n# Included Software #\r\n\r\nThis software  would not  be possible  without work  previously done  for many\r\nother projects:\r\n\r\n\r\n## Net-OpenID-Consumer ##\r\n\r\n* by Brad Fitzpatrick\r\n* <http://search.cpan.org/~mart/Net-OpenID-Consumer/>\r\n\r\nUsed for OpenID authentication.\r\n\r\n\r\n## Crypt-DH ##\r\n\r\n* by Benjamin Trott\r\n* <http://search.cpan.org/dist/Crypt-DH/>\r\n\r\nCrypt-DH is used to enable the OpenID authentication.\r\n\r\n\r\n## XML-Atom-Simplefeed ##\r\n\r\n* by Aristotle Pagaltzis\r\n* <http://search.cpan.org/~aristotle/XML-Atom-SimpleFeed/>\r\n\r\nUsed to generate the atom feeds.\r\n\r\n## VectorMap.pm ##\r\n\r\n* by Fletcher T. Penney\r\n* <http://fletcherpenney.net/>\r\n\r\nUsed to find similar pages, and perform searches of site content.\r\n\r\n## Lingua-Stem ##\r\n\r\n* by Benjamin Franz and Jim Richardson\r\n* <http://search.cpan.org/dist/Lingua-Stem/>\r\n\r\nUsed by my VectorMap searching software to improve results\r\n\r\n\r\n## MultiMarkdown 3.0 ##\r\n\r\n* by Fletcher T. Penney\r\n* <http://fletcherpenney.net/mmd/>\r\n\r\nMultiMarkdown is my update to John Gruber's\r\n[Markdown](http://daringfireball.net/projects/markdown/) syntax, and built\r\nusing modifications to [peg-markdown](https://github.com/jgm/peg-markdown) by\r\nJohn MacFarlane.\r\n\r\n\r\n# Known Issues #\r\n\r\n* Email is \"de-obfuscated\" when run through an XSLT, and it appears there is\r\n  no (straightforward) way around this. Not that this does *not* affect email\r\n  addresses that are placed in your HTML include statements --- in a sidebar,\r\n  for example.\r\n\r\n\r\n# License #\r\n\r\n\tCopyright (C) 2010-2011  Fletcher T. Penney <fletcher@fletcherpenney.net>\r\n\r\n\tThis program is free software; you can redistribute it and/or modify\r\n\tit under the terms of the GNU General Public License as published by\r\n\tthe Free Software Foundation; either version 2 of the License, or\r\n\t(at your option) any later version.\r\n\r\n\tThis program is distributed in the hope that it will be useful,\r\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\tGNU General Public License for more details.\r\n\r\n\tYou should have received a copy of the GNU General Public License\r\n\talong with this program; if not, write to the\r\n\t   Free Software Foundation, Inc.\r\n\t   59 Temple Place, Suite 330\r\n\t   Boston, MA 02111-1307 USA","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}